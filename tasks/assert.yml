---

- name: assert | Test cups_listen
  ansible.builtin.assert:
    that:
      - cups_listen is defined
      - cups_listen is string
      - cups_listen is not none
    quiet: true

- name: assert | Test cups_browsing
  ansible.builtin.assert:
    that:
      - cups_browsing is defined
      - cups_browsing is boolean
    quiet: true

- name: assert | Test cups_locations
  ansible.builtin.assert:
    that:
      - cups_locations is defined
      - cups_locations is iterable
    quiet: true

- name: assert | Test item in cups_locations
  ansible.builtin.assert:
    that:
      - item.name is defined
      - item.name is string
      - item.name is not none
      - item.order is defined
      - item.order is string
      - item.order is not none
    quiet: true
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"

- name: assert | Test item.authtype in cups_locations
  ansible.builtin.assert:
    that:
      - item.authtype in [ "Basic", "Default", "Negotiate", "None" ]
    quiet: true
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.authtype is defined

- name: assert | Test item.allow in cups_locations
  ansible.builtin.assert:
    that:
      - item.allow is string
      - item.allow is not none
    quiet: true
  loop: "{{ cups_locations }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - item.allow is defined

- name: assert | Test cups_preserve_job_history
  ansible.builtin.assert:
    that:
      - cups_preserve_job_history is defined
      - cups_preserve_job_history is boolean
    quiet: true

- name: assert | Test cups_web_interface
  ansible.builtin.assert:
    that:
      - cups_web_interface is defined
      - cups_web_interface is boolean
    quiet: true
